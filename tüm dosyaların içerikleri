Makefile:
NAME=inception

all:
	docker-compose -f srcs/docker-compose.yml --env-file srcs/.env up --build -d

down:
	docker-compose -f srcs/docker-compose.yml --env-file srcs/.env down

fclean: down
	docker system prune -af
	docker volume rm $$(docker volume ls -q)

re: fclean all






.env:
WP_DB_NAME=wordpress
WP_DB_USER=fekiz
WP_DB_PASSWORD=fekiz
WP_DB_ROOT_PASSWORD=fekiz

WP_ADMIN_USER=fekizz
WP_ADMIN_PASS=fekiz
WP_ADMIN_EMAIL=osmanxfurkan62@gmail.com
WP_SITE_URL=https://fekiz.42.fr
WP_SITE_TITLE=Inception Site

WP_EXTRA_USER=furkan
WP_EXTRA_PASS=fekiz






docker-compose.yml:
version: '3.3'

services:
  nginx:
    build: ./requirements/nginx
    container_name: nginx
    ports:
      - "443:443"
    volumes:
      - wordpress_files:/var/www/html
    environment:
      - DOMAIN_NAME=fekiz.42.fr
    depends_on:
      - wordpress
    networks:
      - inception
    restart: always

  wordpress:
    build: ./requirements/wordpress
    container_name: wordpress
    expose:
      - "9000"
    volumes:
      - wordpress_files:/var/www/html
    environment:
      - WORDPRESS_DB_HOST=mariadb
      - WORDPRESS_DB_NAME=wordpress
      - WORDPRESS_DB_USER=fekiz
      - WORDPRESS_DB_PASSWORD=fekiz
    depends_on:
      - mariadb
    networks:
      - inception
    restart: always

  mariadb:
    build: ./requirements/mariadb
    container_name: mariadb
    expose:
      - "3306"
    volumes:
      - db_data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=wordpress
      - MYSQL_USER=fekiz
      - MYSQL_PASSWORD=fekiz
      - MYSQL_ROOT_PASSWORD=fekiz
    networks:
      - inception
    restart: always

volumes:
  db_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/fekiz/data/mariadb
  wordpress_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/fekiz/data/wordpress


networks:
  inception:
    driver: bridge






mariadb/Dockerfile:
FROM debian:bullseye

RUN apt-get update && apt-get install -y mariadb-server

COPY ./conf/50-server.cnf /etc/mysql/mariadb.conf.d/
COPY ./tools/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

EXPOSE 3306

ENTRYPOINT ["/entrypoint.sh"]






mariadb/conf/50-server.cnf:
[mysqld]
user = mysql
port = 3306
bind-address = 0.0.0.0
datadir = /var/lib/mysql
socket = /run/mysqld/mysqld.sock
pid-file = /run/mysqld/mysqld.pid
symbolic-links = 0
skip-external-locking
skip-name-resolve

# charset
character-set-server = utf8mb4
collation-server = utf8mb4_general_ci

# logging
log-error = /var/log/mysql/error.log
expire_logs_days = 10

# innodb
innodb_file_per_table = 1






mariadb/tools/entrypoint.sh:
#!/bin/sh
set -ex

DB_NAME="${MYSQL_DATABASE}"
DB_USER="${MYSQL_USER}"
DB_PASSWORD="${MYSQL_PASSWORD}"
DB_ROOT_PASSWORD="${MYSQL_ROOT_PASSWORD}"

echo "üö® entrypoint.sh √ßalƒ±≈ütƒ± üö®"

# Eƒüer veritabanƒ± ilk kez kuruluyorsa
if [ ! -f /var/lib/mysql/ibdata1 ]; then
  echo "‚úÖ ƒ∞lk MariaDB kurulumu yapƒ±lƒ±yor..."
  mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
fi

# MariaDB'yi ba≈ülat
mysqld_safe --datadir=/var/lib/mysql &

# MariaDB hazƒ±r olana kadar bekle
until mysqladmin ping --silent; do
  echo "‚è≥ MariaDB ba≈ülatƒ±lƒ±yor..."
  sleep 1
done

# Kullanƒ±cƒ± ve veritabanƒ± olu≈ütur
echo "‚úÖ Veritabanƒ± ve kullanƒ±cƒ±lar olu≈üturuluyor..."
mysql -u root <<EOSQL
CREATE DATABASE IF NOT EXISTS ${DB_NAME};
DROP USER IF EXISTS '${DB_USER}'@'%';
CREATE USER '${DB_USER}'@'%' IDENTIFIED BY '${DB_PASSWORD}';
GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO '${DB_USER}'@'%';
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '${DB_ROOT_PASSWORD}';
FLUSH PRIVILEGES;
EOSQL

# MariaDB'yi d√ºzg√ºn ≈üekilde durdur
mysqladmin shutdown

sleep 3

# Kalƒ±cƒ± ba≈ülat
echo "üöÄ MariaDB normal ba≈ülatƒ±lƒ±yor..."
exec mysqld_safe --datadir=/var/lib/mysql





nginx/Dockerfile:
FROM debian:bullseye

RUN apt-get update && apt-get install -y nginx openssl

COPY ./tools/installer.sh /installer.sh
COPY ./conf/default.conf /etc/nginx/sites-available/default
RUN chmod +x /installer.sh

EXPOSE 443

ENTRYPOINT ["/installer.sh"]





nginx/conf/default.conf:
server {
    listen 443 ssl;
    server_name fekiz.42.fr;

    ssl_certificate     /etc/ssl/certs/fekiz.42.fr.crt;
    ssl_certificate_key /etc/ssl/private/fekiz.42.fr.key;

    ssl_protocols TLSv1.2 TLSv1.3;

    root /var/www/html;
    index index.php index.html;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass wordpress:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
}





nginx/tools/installer.sh:
#!/bin/bash
set -e

CERT_DIR="/etc/ssl/certs"
KEY_DIR="/etc/ssl/private"
DOMAIN="${DOMAIN_NAME}"

mkdir -p ${CERT_DIR} ${KEY_DIR}

openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
  -keyout ${KEY_DIR}/${DOMAIN}.key \
  -out ${CERT_DIR}/${DOMAIN}.crt \
  -subj "/C=TR/ST=Istanbul/L=42School/O=Inception/CN=${DOMAIN}"

echo "Starting nginx with TLS for ${DOMAIN}"
exec nginx -g "daemon off;"





wordpress/Dockerfile:
FROM debian:bullseye

RUN apt-get update && apt-get install -y \
    php-fpm php-mysql php-cli php-curl php-gd php-mbstring php-xml php-xmlrpc \
    mariadb-client curl wget unzip less netcat

RUN mkdir -p /run/php

# wp-cli
RUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && \
    chmod +x wp-cli.phar && mv wp-cli.phar /usr/local/bin/wp

COPY ./conf/www.conf /etc/php/7.4/fpm/pool.d/www.conf
COPY ./tools/WordPressInstaller.sh /usr/local/bin/setup.sh
RUN chmod +x /usr/local/bin/setup.sh

EXPOSE 9000
ENTRYPOINT ["setup.sh"]







wordpress/tools/WordPressInstaller.sh:
set -ex

# MariaDB haz      r olana kadar bekle
echo "   ^o    MariaDB haz      r olana kadar bekleniyor..."
until nc -z mariadb 3306; do
  echo "   ^o    MariaDB hala haz      r de   ^=il..."
  sleep 2
done

echo "   ^|^e MariaDB eri   ^=ilebilir durumda."

cd /var/www/html

# E   ^=er kurulum daha       nce yap      lmad      ysa
if [ ! -f wp-config.php ]; then
  echo "   ^=^s    WordPress indiriliyor..."
  wp core download --allow-root

  echo "   ^=^{    wp-config.php olu   ^=turuluyor..."
  wp config create \
    --dbname="$WP_DB_NAME" \
    --dbuser="$WP_DB_USER" \
    --dbpass="$WP_DB_PASSWORD" \
    --dbhost=mariadb \
    --allow-root

  echo "   ^=^z^` WordPress kurulumu yap      l      yor..."
  wp core install \
    --url="$WP_SITE_URL" \
    --title="$WP_SITE_TITLE" \
    --admin_user="$WP_ADMIN_USER" \
    --admin_password="$WP_ADMIN_PASS" \
    --admin_email="$WP_ADMIN_EMAIL" \
    --skip-email \
    --allow-root
fi

echo "   ^|^e php-fpm ba   ^=lat      l      yor..."
php-fpm7.4 -F






wordpress/conf/www.conf:
[www]
user = www-data
group = www-data
listen = 9000
pm = dynamic
pm.max_children = 5
pm.start_servers = 2
pm.min_spare_servers = 1
pm.max_spare_servers = 3
